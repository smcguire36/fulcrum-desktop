'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _minidb = require('minidb');

var _fulcrumCore = require('fulcrum-core');

class Signature {
  static get tableName() {
    return 'signatures';
  }

  static get columns() {
    return [{ name: 'accountRowID', column: 'account_id', type: 'integer', null: false }, { name: 'id', column: 'resource_id', type: 'string', null: false }, { name: 'filePath', column: 'file_path', type: 'string' }, { name: 'fileSize', column: 'file_size', type: 'integer' }, { name: 'contentType', column: 'content_type', type: 'string' }, { name: 'isDownloaded', column: 'is_downloaded', type: 'boolean', null: false }, { name: 'isUploaded', column: 'is_uploaded', type: 'boolean', null: false }, { name: 'isStored', column: 'is_stored', type: 'boolean', null: false }, { name: 'isProcessed', column: 'is_processed', type: 'boolean', null: false }, { name: 'formRowID', column: 'form_id', type: 'integer' }, { name: 'formID', column: 'form_resource_id', type: 'string' }, { name: 'recordRowID', column: 'record_id', type: 'integer' }, { name: 'recordID', column: 'record_resource_id', type: 'string' }, { name: 'updatedByRowID', column: 'updated_by_id', type: 'integer' }, { name: 'updatedByID', column: 'updated_by_resource_id', type: 'string' }, { name: 'createdByRowID', column: 'created_by_id', type: 'integer' }, { name: 'createdByID', column: 'created_by_resource_id', type: 'string' }, { name: 'createdAt', column: 'server_created_at', type: 'datetime' }, { name: 'updatedAt', column: 'server_updated_at', type: 'datetime' }];
  }

  get id() {
    return this._id;
  }

  updateFromAPIAttributes(attributes) {
    this._id = attributes.access_key;
    this._fileSize = attributes.file_size;
    this._isUploaded = attributes.uploaded;
    this._isStored = attributes.stored;
    this._isProcessed = attributes.processed;
    this._contentType = attributes.content_type;
    this._createdByID = attributes.created_by_id;
    this._updatedByID = attributes.updated_by_id;
    this._createdAt = _fulcrumCore.DateUtils.parseISOTimestamp(attributes.created_at);
    this._updatedAt = _fulcrumCore.DateUtils.parseISOTimestamp(attributes.updated_at);
    this._formID = attributes.form_id;
    this._recordID = attributes.record_id;
  }

  get isDownloaded() {
    return this._isDownloaded;
  }

  set isDownloaded(value) {
    this._isDownloaded = !!value;
  }

  get createdAt() {
    return this._createdAt;
  }

  get updatedAt() {
    return this._updatedAt;
  }
}

exports.default = Signature;
_minidb.PersistentObject.register(Signature);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYWluL21vZGVscy9zaWduYXR1cmUuanMiXSwibmFtZXMiOlsiU2lnbmF0dXJlIiwidGFibGVOYW1lIiwiY29sdW1ucyIsIm5hbWUiLCJjb2x1bW4iLCJ0eXBlIiwibnVsbCIsImlkIiwiX2lkIiwidXBkYXRlRnJvbUFQSUF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwiYWNjZXNzX2tleSIsIl9maWxlU2l6ZSIsImZpbGVfc2l6ZSIsIl9pc1VwbG9hZGVkIiwidXBsb2FkZWQiLCJfaXNTdG9yZWQiLCJzdG9yZWQiLCJfaXNQcm9jZXNzZWQiLCJwcm9jZXNzZWQiLCJfY29udGVudFR5cGUiLCJjb250ZW50X3R5cGUiLCJfY3JlYXRlZEJ5SUQiLCJjcmVhdGVkX2J5X2lkIiwiX3VwZGF0ZWRCeUlEIiwidXBkYXRlZF9ieV9pZCIsIl9jcmVhdGVkQXQiLCJwYXJzZUlTT1RpbWVzdGFtcCIsImNyZWF0ZWRfYXQiLCJfdXBkYXRlZEF0IiwidXBkYXRlZF9hdCIsIl9mb3JtSUQiLCJmb3JtX2lkIiwiX3JlY29yZElEIiwicmVjb3JkX2lkIiwiaXNEb3dubG9hZGVkIiwiX2lzRG93bmxvYWRlZCIsInZhbHVlIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0IiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUVlLE1BQU1BLFNBQU4sQ0FBZ0I7QUFDN0IsYUFBV0MsU0FBWCxHQUF1QjtBQUNyQixXQUFPLFlBQVA7QUFDRDs7QUFFRCxhQUFXQyxPQUFYLEdBQXFCO0FBQ25CLFdBQU8sQ0FDTCxFQUFFQyxNQUFNLGNBQVIsRUFBd0JDLFFBQVEsWUFBaEMsRUFBOENDLE1BQU0sU0FBcEQsRUFBK0RDLE1BQU0sS0FBckUsRUFESyxFQUVMLEVBQUVILE1BQU0sSUFBUixFQUFjQyxRQUFRLGFBQXRCLEVBQXFDQyxNQUFNLFFBQTNDLEVBQXFEQyxNQUFNLEtBQTNELEVBRkssRUFHTCxFQUFFSCxNQUFNLFVBQVIsRUFBb0JDLFFB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S0FBdkI7QUFDRDs7QUFFRCxNQUFJQyxTQUFKLEdBQWdCO0FBQ2QsV0FBTyxLQUFLWixVQUFaO0FBQ0Q7O0FBRUQsTUFBSWEsU0FBSixHQUFnQjtBQUNkLFdBQU8sS0FBS1YsVUFBWjtBQUNEO0FBOUQ0Qjs7a0JBQVY3QixTO0FBaUVyQix5QkFBaUJ3QyxRQUFqQixDQUEwQnhDLFNBQTFCIiwiZmlsZSI6InNpZ25hdHVyZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBlcnNpc3RlbnRPYmplY3QgfSBmcm9tICdtaW5pZGInO1xyXG5pbXBvcnQgeyBEYXRlVXRpbHMgfSBmcm9tICdmdWxjcnVtLWNvcmUnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2lnbmF0dXJlIHtcclxuICBzdGF0aWMgZ2V0IHRhYmxlTmFtZSgpIHtcclxuICAgIHJldHVybiAnc2lnbmF0dXJlcyc7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0IGNvbHVtbnMoKSB7XHJcbiAgICByZXR1cm4gW1xyXG4gICAgICB7IG5hbWU6ICdhY2NvdW50Um93SUQnLCBjb2x1bW46ICdhY2NvdW50X2lkJywgdHlwZTogJ2ludGVnZXInLCBudWxsOiBmYWxzZSB9LFxyXG4gICAgICB7IG5hbWU6ICdpZCcsIGNvbHVtbjogJ3Jlc291cmNlX2lkJywgdHlwZTogJ3N0cmluZycsIG51bGw6IGZhbHNlIH0sXHJcbiAgICAgIHsgbmFtZTogJ2ZpbGVQYXRoJywgY29sdW1uOiAnZmlsZV9wYXRoJywgdHlwZTogJ3N0cmluZycgfSxcclxuICAgICAgeyBuYW1lOiAnZmlsZVNpemUnLCBjb2x1bW46ICdmaWxlX3NpemUnLCB0eXBlOiAnaW50ZWdlcicgfSxcclxuICAgICAgeyBuYW1lOiAnY29udGVudFR5cGUnLCBjb2x1bW46ICdjb250ZW50X3R5cGUnLCB0eXBlOiAnc3RyaW5nJyB9LFxyXG4gICAgICB7IG5hbWU6ICdpc0Rvd25sb2FkZWQnLCBjb2x1bW46ICdpc19kb3dubG9hZGVkJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxyXG4gICAgICB7IG5hbWU6ICdpc1VwbG9hZGVkJywgY29sdW1uOiAnaXNfdXBsb2FkZWQnLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXHJcbiAgICAgIHsgbmFtZTogJ2lzU3RvcmVkJywgY29sdW1uOiAnaXNfc3RvcmVkJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxyXG4gICAgICB7IG5hbWU6ICdpc1Byb2Nlc3NlZCcsIGNvbHVtbjogJ2lzX3Byb2Nlc3NlZCcsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcclxuICAgICAgeyBuYW1lOiAnZm9ybVJvd0lEJywgY29sdW1uOiAnZm9ybV9pZCcsIHR5cGU6ICdpbnRlZ2VyJyB9LFxyXG4gICAgICB7IG5hbWU6ICdmb3JtSUQnLCBjb2x1bW46ICdmb3JtX3Jlc291cmNlX2lkJywgdHlwZTogJ3N0cmluZycgfSxcclxuICAgICAgeyBuYW1lOiAncmVjb3JkUm93SUQnLCBjb2x1bW46ICdyZWNvcmRfaWQnLCB0eXBlOiAnaW50ZWdlcicgfSxcclxuICAgICAgeyBuYW1lOiAncmVjb3JkSUQnLCBjb2x1bW46ICdyZWNvcmRfcmVzb3VyY2VfaWQnLCB0eXBlOiAnc3RyaW5nJyB9LFxyXG4gICAgICB7IG5hbWU6ICd1cGRhdGVkQnlSb3dJRCcsIGNvbHVtbjogJ3VwZGF0ZWRfYnlfaWQnLCB0eXBlOiAnaW50ZWdlcicgfSxcclxuICAgICAgeyBuYW1lOiAndXBkYXRlZEJ5SUQnLCBjb2x1bW46ICd1cGRhdGVkX2J5X3Jlc291cmNlX2lkJywgdHlwZTogJ3N0cmluZycgfSxcclxuICAgICAgeyBuYW1lOiAnY3JlYXRlZEJ5Um93SUQnLCBjb2x1bW46ICdjcmVhdGVkX2J5X2lkJywgdHlwZTogJ2ludGVnZXInIH0sXHJcbiAgICAgIHsgbmFtZTogJ2NyZWF0ZWRCeUlEJywgY29sdW1uOiAnY3JlYXRlZF9ieV9yZXNvdXJjZV9pZCcsIHR5cGU6ICdzdHJpbmcnIH0sXHJcbiAgICAgIHsgbmFtZTogJ2NyZWF0ZWRBdCcsIGNvbHVtbjogJ3NlcnZlcl9jcmVhdGVkX2F0JywgdHlwZTogJ2RhdGV0aW1lJyB9LFxyXG4gICAgICB7IG5hbWU6ICd1cGRhdGVkQXQnLCBjb2x1bW46ICdzZXJ2ZXJfdXBkYXRlZF9hdCcsIHR5cGU6ICdkYXRldGltZScgfVxyXG4gICAgXTtcclxuICB9XHJcblxyXG4gIGdldCBpZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pZDtcclxuICB9XHJcblxyXG4gIHVwZGF0ZUZyb21BUElBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpIHtcclxuICAgIHRoaXMuX2lkID0gYXR0cmlidXRlcy5hY2Nlc3Nfa2V5O1xyXG4gICAgdGhpcy5fZmlsZVNpemUgPSBhdHRyaWJ1dGVzLmZpbGVfc2l6ZTtcclxuICAgIHRoaXMuX2lzVXBsb2FkZWQgPSBhdHRyaWJ1dGVzLnVwbG9hZGVkO1xyXG4gICAgdGhpcy5faXNTdG9yZWQgPSBhdHRyaWJ1dGVzLnN0b3JlZDtcclxuICAgIHRoaXMuX2lzUHJvY2Vzc2VkID0gYXR0cmlidXRlcy5wcm9jZXNzZWQ7XHJcbiAgICB0aGlzLl9jb250ZW50VHlwZSA9IGF0dHJpYnV0ZXMuY29udGVudF90eXBlO1xyXG4gICAgdGhpcy5fY3JlYXRlZEJ5SUQgPSBhdHRyaWJ1dGVzLmNyZWF0ZWRfYnlfaWQ7XHJcbiAgICB0aGlzLl91cGRhdGVkQnlJRCA9IGF0dHJpYnV0ZXMudXBkYXRlZF9ieV9pZDtcclxuICAgIHRoaXMuX2NyZWF0ZWRBdCA9IERhdGVVdGlscy5wYXJzZUlTT1RpbWVzdGFtcChhdHRyaWJ1dGVzLmNyZWF0ZWRfYXQpO1xyXG4gICAgdGhpcy5fdXBkYXRlZEF0ID0gRGF0ZVV0aWxzLnBhcnNlSVNPVGltZXN0YW1wKGF0dHJpYnV0ZXMudXBkYXRlZF9hdCk7XHJcbiAgICB0aGlzLl9mb3JtSUQgPSBhdHRyaWJ1dGVzLmZvcm1faWQ7XHJcbiAgICB0aGlzLl9yZWNvcmRJRCA9IGF0dHJpYnV0ZXMucmVjb3JkX2lkO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGlzRG93bmxvYWRlZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pc0Rvd25sb2FkZWQ7XHJcbiAgfVxyXG5cclxuICBzZXQgaXNEb3dubG9hZGVkKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9pc0Rvd25sb2FkZWQgPSAhIXZhbHVlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGNyZWF0ZWRBdCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9jcmVhdGVkQXQ7XHJcbiAgfVxyXG5cclxuICBnZXQgdXBkYXRlZEF0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3VwZGF0ZWRBdDtcclxuICB9XHJcbn1cclxuXHJcblBlcnNpc3RlbnRPYmplY3QucmVnaXN0ZXIoU2lnbmF0dXJlKTtcclxuIl19